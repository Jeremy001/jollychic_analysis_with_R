library(implyr)
library(odbc)
drv <- odbc::odbc()
library(implyr)
library(odbc)
drv <- odbc::odbc()
impala <- src_impala(
drv = drv,
driver = "Cloudera ODBC Driver for Impala",
dsn = 'jolly_impala_64'
)
impala <- src_impala(
drv = drv,
driver = "Cloudera ODBC Driver for Impala",
dsn = 'jolly_impala_64'
)
provider_info <- dbGetQuery(
impala,
"WITH
t1 AS
(SELECT p1.provider_code
,COUNT(p1.goods_id) AS total_goods_count
,SUM(CASE WHEN p1.goods_weight >= 0.00001 THEN 1 ELSE 0 END) AS have_weight_goods_count
,SUM(CASE WHEN p1.goods_weight >= 0.00001 THEN 1 ELSE 0 END) / COUNT(p1.goods_id) AS have_weight_rate
,SUM(CASE WHEN p1.is_on_sale = 1 THEN 1 ELSE 0 END) AS onsale_goods_count
,SUM(CASE WHEN p1.is_on_sale = 1 THEN 1 ELSE 0 END) / COUNT(p1.goods_id) AS onsale_goods_rate
FROM jolly.who_goods AS p1
GROUP BY p1.provider_code
)
SELECT *
FROM t1
ORDER BY total_goods_count DESC
;"
)
head(provider_info)
library(tidyverse)
provider_info %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
ggplot(provider_info, aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
str(provider_info)
provider_info$total_goods_count <- as.integer(provider_info$total_goods_count)
provider_info$have_weight_goods_count <- as.integer(provider_info$have_weight_goods_count)
provider_info$onsale_goods_count <- as.integer(provider_info$onsale_goods_count)
provider_info %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
summarise(provider_info)
summary(provider_info)
provider_info %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_histogram()
provider_info %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
provider_info %>%
ggplot(aes(x = total_goods_count)) +
geom_histogram()
provider_info %>%
ggplot(aes(x = total_goods_count)) +
geom_histogram(mapping = (bins = 100))
provider_info %>%
ggplot(aes(x = total_goods_count, bins = 100)) +
geom_histogram()
provider_info %>%
ggplot(aes(x = total_goods_count, bins = 100)) +
geom_histogram(binwidth = 10)
provider_info %>%
filter(total_goods_count <= 10000) %>%
ggplot(aes(x = total_goods_count, bins = 100)) +
geom_histogram(binwidth = 10)
provider_info %>%
filter(total_goods_count <= 2000) %>%
ggplot(aes(x = total_goods_count, bins = 100)) +
geom_histogram(binwidth = 10)
provider_info %>%
filter(total_goods_count <= 500) %>%
ggplot(aes(x = total_goods_count, bins = 100)) +
geom_histogram(binwidth = 10)
provider_info %>%
filter(total_goods_count <= 500) %>%
ggplot(aes(x = total_goods_count, bins = 100)) +
geom_histogram(binwidth = 20)
provider_info %>%
filter(total_goods_count <= 500) %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
provider_info %>%
filter(total_goods_count <= 400) %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
provider_info %>%
filter(total_goods_count <= 100) %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
provider_info %>%
filter(total_goods_count <= 1000) %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
provider_info %>%
filter(total_goods_count <= 500) %>%
ggplot(aes(x = total_goods_count)) +
geom_histogram(binwidth = 20)
provider_info %>%
filter(total_goods_count <= 500) %>%
ggplot(aes(x = total_goods_count)) +
geom_histogram(binwidth = 10)
provider_info %>%
filter(total_goods_count >= 200) %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
provider_info %>%
filter(total_goods_count >= 200 & total_goods_count < 10000) %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
& have_weight_rate < 0.5) %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
provider_info %>%
filter(total_goods_count >= 200
& total_goods_count < 10000
& have_weight_rate < 0.5) %>%
ggplot(aes(x = total_goods_count, y = have_weight_goods_count)) +
geom_point()
& have_weight_rate < 0.5) %>%
summarise(n())
& have_weight_rate < 0.5) %>%
summarise(num = n())
& have_weight_rate < 0.5) %>%
summarise(count = n())
& have_weight_rate < 0.5) %>%
View()
provider_info %>%
filter(total_goods_count >= 200
& total_goods_count < 10000
& have_weight_rate < 0.5) %>%
View()
provider_info %>%
filter(total_goods_count >= 200
& have_weight_rate < 0.5) %>%
View()
provider_info %>%
ggplot(aes(total_goods_count, have_weight_rate)) +
geom_point()
provider_info %>%
filter(total_goods_count >= 200) %>%
ggplot(aes(total_goods_count, have_weight_rate)) +
geom_point()
& total_goods_count < 10000) %>%
ggplot(aes(total_goods_count, have_weight_rate)) +
geom_point()
provider_info %>%
filter(total_goods_count >= 200
& total_goods_count < 10000) %>%
ggplot(aes(total_goods_count, have_weight_rate)) +
geom_point()
str(provider_info)
supp_pool_info <- dbGetQuery(
impala,
"WITH
t1 AS
(SELECT FROM_UNIXTIME(p1.gmt_created, 'yyyy') AS add_year
,FROM_UNIXTIME(p1.gmt_created, 'yyyy-MM') AS add_month
,p1.supp_code
,COUNT(p1.goods_id) AS total_goods_count
,SUM(CASE WHEN p1.goods_weight >= 0.00001 THEN 1 ELSE 0 END) AS have_weight_goods_count
,SUM(CASE WHEN p1.goods_weight >= 0.00001 THEN 1 ELSE 0 END) / COUNT(p1.goods_id) AS have_weight_rate
FROM jolly.who_product_pool AS p1
GROUP BY FROM_UNIXTIME(p1.gmt_created, 'yyyy')
,FROM_UNIXTIME(p1.gmt_created, 'yyyy-MM')
,p1.supp_code
)
SELECT *
FROM t1
;"
)
impala <- src_impala(
drv = drv,
driver = "Cloudera ODBC Driver for Impala",
dsn = 'jolly_impala_64'
)
supp_pool_info <- dbGetQuery(
impala,
"WITH
t1 AS
(SELECT FROM_UNIXTIME(p1.gmt_created, 'yyyy') AS add_year
,FROM_UNIXTIME(p1.gmt_created, 'yyyy-MM') AS add_month
,p1.supp_code
,COUNT(p1.goods_id) AS total_goods_count
,SUM(CASE WHEN p1.goods_weight >= 0.00001 THEN 1 ELSE 0 END) AS have_weight_goods_count
,SUM(CASE WHEN p1.goods_weight >= 0.00001 THEN 1 ELSE 0 END) / COUNT(p1.goods_id) AS have_weight_rate
FROM jolly.who_product_pool AS p1
GROUP BY FROM_UNIXTIME(p1.gmt_created, 'yyyy')
,FROM_UNIXTIME(p1.gmt_created, 'yyyy-MM')
,p1.supp_code
)
SELECT *
FROM t1
;"
)
str(supp_pool_info)
supp_pool_info$total_goods_count <- as.integer(supp_pool_info$total_goods_count)
supp_pool_info$have_weight_goods_count <- as.integer(supp_pool_info$have_weight_goods_count)
sum(supp_pool_info$have_weight_goods_count)
sum(supp_pool_info$total_goods_count)
supp_pool_info %>%
group_by(add_year, add_month) %>%
summarise(num = count())
supp_pool_info %>%
group_by(add_year, add_month) %>%
summarise(num = count(total_goods_count))
supp_pool_info %>%
group_by(add_year, add_month) %>%
summarise(num = n())
supp_pool_info %>%
group_by(add_year, add_month) %>%
summarise(total_goods_count = sum(total_goods_count),
have_weight_goods_count = sum(have_weight_goods_count))
library(tidyverse)
